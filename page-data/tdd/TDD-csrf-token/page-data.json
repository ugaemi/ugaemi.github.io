{"componentChunkName":"component---src-templates-blog-post-js","path":"/tdd/TDD-csrf-token/","result":{"data":{"site":{"siteMetadata":{"title":"개미의 개발노트","author":"ugaemi","siteUrl":"http://ugaemi.com","comment":{"disqusShortName":"","utterances":"ugaemi/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"19335998-cb52-555c-9ff3-4644c725f2df","excerpt":"이슈 요즘 파이썬을 이용한 클린코드를 위한 테스트 주도 개발 책을 따라해가며 TDD로 Django를 다루는 법을 배워가고 있다. 어제는 입력 폼을 만드는 부분을 만들고 테스트해보았는데 자꾸 실패를 했다.\n이유는 안의 csrf token 때문이었다. CSRF(Cross-Site Request Forgery)란 CSRF…","html":"<h2 id=\"이슈\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%8A%88\" aria-label=\"이슈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EC%9D%B4%EC%8A%88\" aria-label=\"이슈 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이슈</h2>\n<p>요즘 <a href=\"https://book.naver.com/bookdb/book_detail.nhn?bid=8819504\">파이썬을 이용한 클린코드를 위한 테스트 주도 개발</a> 책을 따라해가며 TDD로 Django를 다루는 법을 배워가고 있다.</p>\n<p>어제는 입력 폼을 만드는 부분을 만들고 테스트해보았는데 자꾸 실패를 했다.\n이유는 <code class=\"language-text\">form</code>안의 csrf token 때문이었다.</p>\n<h3 id=\"csrfcross-site-request-forgery란\" style=\"position:relative;\"><a href=\"#csrfcross-site-request-forgery%EB%9E%80\" aria-label=\"csrfcross site request forgery란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#csrfcross-site-request-forgery%EB%9E%80\" aria-label=\"csrfcross site request forgery란 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSRF(Cross-Site Request Forgery)란</h3>\n<blockquote>\n<p>CSRF는 웹사이트 취약점 공격의 하나로, 사용자가 자신의 의지와는 무관하게 공격자가 의도한 행위(수정, 삭제, 등록 등)를 특정 웹사이트에 요청하게 하는 공격을 말한다. 사이트 간 스크립팅(XSS)을 이용한 공격이 사용자가 특정 웹사이트를 신용하는 점을 노린 것이라면, CSRF는 특정 웹사이트가 사용자의 웹 브라우저를 신용하는 상태를 노린 것이다. 일단 사용자가 웹사이트에 로그인한 상태에서 사이트간 요청 위조 공격 코드가 삽입된 페이지를 열면, 공격 대상이 되는 웹사이트는 위조된 공격 명령이 믿을 수 있는 사용자로부터 발송된 것으로 판단하게 되어 공격에 노출된다.</p>\n</blockquote>\n<p>이와 같은 CSRF 공격을 막기 위한 수단으로 token을 사용하여 사용자를 인증을 하는 방식이 있다.\nDjango에서는 <code class=\"language-text\">form</code> 태그 안에 추가하여 간편하게 사용할 수 있다.</p>\n<p>하지만 이 token을 추가하면서 테스트하기가 번거로워졌다.\n응답을 받은 html에는 <code class=\"language-text\">hidden</code> type의 <code class=\"language-text\">input</code>으로 token이 생성되어있지만, template html에는 생성되지 않았기 때문이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">FAIL: test_home_page_returns_correct_html <span class=\"token punctuation\">(</span>lists.tests.HomePageTest<span class=\"token punctuation\">)</span>\n----------------------------------------------------------------------\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Users/yugyeong/Study/tdd-4-clean-code/superlists/lists/tests.py\"</span>, line <span class=\"token number\">19</span>, <span class=\"token keyword\">in</span> test_home_page_returns_correct_html\n    self.assertEqual<span class=\"token punctuation\">(</span>response.content.decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>, expected_html<span class=\"token punctuation\">)</span>\nAssertionError: <span class=\"token string\">'&lt;htm[229 chars]     &lt;input type=\"hidden\" name=\"csrfmiddleware[206 chars]l>\\n'</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'&lt;htm[229 chars]     \\n        &lt;/form>\\n        &lt;table id=\"id_[85 chars]l>\\n'</span></code></pre></div>\n<h2 id=\"고민\" style=\"position:relative;\"><a href=\"#%EA%B3%A0%EB%AF%BC\" aria-label=\"고민 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EA%B3%A0%EB%AF%BC\" aria-label=\"고민 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>고민</h2>\n<p>이 문제를 만나기 전까지의 테스트는 매우 순조로웠다.\n비교하는 대상의 값을 모두 알고 있었기 때문이다.</p>\n<p>언젠가 <em>랜덤한 값은 어떻게 테스트하지?</em> 라는 의문이 든 적이 있었다.\n이 코드는 종호오빠가 <a href=\"https://www.slideshare.net/OKJSP/okkycon-120497749?from_m_app=ios\">참고하라고 보내주신 링크</a> 속 <strong>테스트하기 어려운 코드</strong>에 포함된다고 생각했다.</p>\n<p>내가 생각한 해결 방법은 총 3가지였다.</p>\n<ol>\n<li>테스트용 html 파일을 따로 만들자.</li>\n<li>테스트하기 쉬운 코드와 어려운 코드를 분리하자.</li>\n<li>테스트에서 제외시키자.</li>\n</ol>\n<p>1번은 참 무식한 방법이다.\n테스트용 html 파일을 또 하나 만들게되면, 이번은 쉽게 넘어갈지라도 앞으로 비용이 어마어마하게 들 것이다.</p>\n<p>2번은 테스트하기 쉬운 코드와 어려운 코드를 분리하는 방법(종호오빠 추천 방법!)이다.\n<a href=\"https://engineering.21buttons.com/clean-architecture-in-django-d326a4ab86a9\">클린 아키텍처</a>와 함께 생각해보면 csrf token을 사용하는 부분은 원의 가장 바깥쪽이 되고 html은 좀 더 안쪽 원에 위치한다.\n테스트하기 어려운 코드를 따로 빼서 테스트하는 방법이다.\n(분리도 하고 테스트도 하는) 가장 이상적인 방법이지만, 현재 테스트하고 있는 부분(html)은 분리한다고 해서 결과를 바꿀 수 있는 것이 아니라는 판단이 섰다.</p>\n<p>3번은 테스트에서 제외시키는 방법이다.\n가장 쉽고 빠르게 할 수 있는 방법이기도 하다.</p>\n<p>나는 고민 끝에 3번을 택했다.\ncsrf token은 항상 변경되는 값이기 때문에 테스트에서 제외한다고 해서 실제 코드에 영향이 있는 것은 아니므로 괜찮을 것이라 판단했다.</p>\n<p>더 나은 방법으로 해결하신 분이 계시다면 댓글로 남겨주시면 감사하겠습니당 :)</p>\n<h2 id=\"해결\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0\" aria-label=\"해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%ED%95%B4%EA%B2%B0\" aria-label=\"해결 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결</h2>\n<p><a href=\"https://stackoverflow.com/questions/34629261/django-render-to-string-ignores-csrf-token\">스택 오버플로우</a>에서 나와 같은 이슈를 겪고 있는 질문을 발견했다.\n그에 대한 답 중에 정규식으로 csrf token 부분을 찾아내어 삭제한 후 비교하는 코드를 보았고 나는 이를 적용하기로 했다.</p>\n<p>다음은 <code class=\"language-text\">test.py</code>의 <code class=\"language-text\">HomePageTest</code> 클래스의 전체 코드이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePageTest</span><span class=\"token punctuation\">(</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">remove_csrf</span><span class=\"token punctuation\">(</span>html_code<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        csrf_regex <span class=\"token operator\">=</span> <span class=\"token string\">r'&lt;input[^>]+csrfmiddlewaretoken[^>]+>'</span>\n        <span class=\"token keyword\">return</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span>csrf_regex<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> html_code<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">assertEqualExceptCSRF</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> html_code1<span class=\"token punctuation\">,</span> html_code2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span>\n            self<span class=\"token punctuation\">.</span>remove_csrf<span class=\"token punctuation\">(</span>html_code1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            self<span class=\"token punctuation\">.</span>remove_csrf<span class=\"token punctuation\">(</span>html_code2<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_root_url_resolves_to_home_page_view</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        found <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span>found<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span> home_page<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_home_page_returns_correct_html</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        request <span class=\"token operator\">=</span> HttpRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        response <span class=\"token operator\">=</span> home_page<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertEqualExceptCSRF<span class=\"token punctuation\">(</span>\n            render_to_string<span class=\"token punctuation\">(</span><span class=\"token string\">'home.html'</span><span class=\"token punctuation\">,</span> request<span class=\"token operator\">=</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_home_page_can_save_a_POST_request</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        request <span class=\"token operator\">=</span> HttpRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">=</span> <span class=\"token string\">'POST'</span>\n        request<span class=\"token punctuation\">.</span>POST<span class=\"token punctuation\">[</span><span class=\"token string\">'item_text'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'신규 작업 아이템'</span>\n\n        response <span class=\"token operator\">=</span> home_page<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>assertIn<span class=\"token punctuation\">(</span><span class=\"token string\">'신규 작업 아이템'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertEqualExceptCSRF<span class=\"token punctuation\">(</span>\n            render_to_string<span class=\"token punctuation\">(</span><span class=\"token string\">'home.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'new_item_text'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">'신규 작업 아이템'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드를 실행하면 문제 없이 테스트가 통과될 것이다.</p>\n<p>아직 TDD 초짜라 책을 따라가는 것도 조금은 벅차다..\n한 장 넘길때마다 삽질 중이긴 한데, 그래도 재밌당 :D</p>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li><a href=\"https://book.naver.com/bookdb/book_detail.nhn?bid=8819504\">파이썬을 이용한 클린코드를 위한 테스트 주도 개발</a></li>\n<li><a href=\"https://ko.wikipedia.org/wiki/%EC%82%AC%EC%9D%B4%ED%8A%B8_%EA%B0%84_%EC%9A%94%EC%B2%AD_%EC%9C%84%EC%A1%B0\">위키백과</a></li>\n<li><a href=\"https://stackoverflow.com/questions/34629261/django-render-to-string-ignores-csrf-token\">스택 오버플로우</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/tdd/TDD-csrf-token/#%EC%9D%B4%EC%8A%88\">이슈</a></p>\n<ul>\n<li><a href=\"/tdd/TDD-csrf-token/#csrfcross-site-request-forgery%EB%9E%80\">CSRF(Cross-Site Request Forgery)란</a></li>\n</ul>\n</li>\n<li><a href=\"/tdd/TDD-csrf-token/#%EA%B3%A0%EB%AF%BC\">고민</a></li>\n<li><a href=\"/tdd/TDD-csrf-token/#%ED%95%B4%EA%B2%B0\">해결</a></li>\n<li><a href=\"/tdd/TDD-csrf-token/#references\">References</a></li>\n</ul>","frontmatter":{"title":"🔍 TDD csrf token 문제 해결","date":"October 14, 2019"}}},"pageContext":{"slug":"/tdd/TDD-csrf-token/","previous":{"fields":{"slug":"/django/Django-reverse-and-resolve/"},"frontmatter":{"title":"🔫 Django reverse()와 resolve()","category":"Django","draft":false}},"next":{"fields":{"slug":"/django/Django-crontab/"},"frontmatter":{"title":"🔫 django-crontab 사용하기","category":"Django","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}
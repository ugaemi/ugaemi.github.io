{"componentChunkName":"component---src-templates-blog-post-js","path":"/tdd/Django-unit-test/","result":{"data":{"site":{"siteMetadata":{"title":"개미의 개발노트","author":"ugaemi","siteUrl":"http://ugaemi.com","comment":{"disqusShortName":"","utterances":"ugaemi/blog-comments"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"de451dab-045e-5050-aefa-397cf94f9e5d","excerpt":"단위 테스트와 기능 테스트의 차이 기능 테스트 사용자 관점에서 애플리케이션 외부를 테스트하는 것\n상위 레벨의 개발 주도 단위 테스트 프로그래머 관점에서 애플리케이션 내부를 테스트하는 것\n하위 레벨의 개발 주도 TDD…","html":"<h2 id=\"단위-테스트와-기능-테스트의-차이\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B8%B0%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"단위 테스트와 기능 테스트의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B8%B0%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"단위 테스트와 기능 테스트의 차이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단위 테스트와 기능 테스트의 차이</h2>\n<h3 id=\"기능-테스트\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"기능 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EA%B8%B0%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"기능 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능 테스트</h3>\n<blockquote>\n<p>사용자 관점에서 애플리케이션 외부를 테스트하는 것\n상위 레벨의 개발 주도</p>\n</blockquote>\n<h3 id=\"단위-테스트\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"단위 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"단위 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단위 테스트</h3>\n<blockquote>\n<p>프로그래머 관점에서 애플리케이션 내부를 테스트하는 것\n하위 레벨의 개발 주도</p>\n</blockquote>\n<h3 id=\"tdd-작업-순서\" style=\"position:relative;\"><a href=\"#tdd-%EC%9E%91%EC%97%85-%EC%88%9C%EC%84%9C\" aria-label=\"tdd 작업 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#tdd-%EC%9E%91%EC%97%85-%EC%88%9C%EC%84%9C\" aria-label=\"tdd 작업 순서 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TDD 작업 순서</h3>\n<ol>\n<li>기능 테스트를 작성해서 사용자 관점의 새로운 기능성을 정의하는 것부터 시작한다.</li>\n<li>기능 테스트가 실패하고 나면 어떻게 코드를 작성해야 테스트를 통과할지를 생각해보도록 한다.\n이 시점에서 하나 또는 그 이상의 단위 테스트를 이용해서 어떻게 코드가 동작해야 하는지 정의한다.</li>\n<li>단위 테스트가 실패하고 나면 단위 테스트를 통과할 수 있을 정도의 최소한의 코드만 작성한다.\n기능 테스트가 완전해질 때까지 과정 2와 3을 반복해야 할 수도 있다.</li>\n<li>기능 테스트를 재실행해서 통과하는지 또는 제대로 동작하는지 확인한다.\n이 과정에서 새로운 단위 테스트를 작성해야 할 수도 있다.</li>\n</ol>\n<h2 id=\"django에서의-단위-테스트\" style=\"position:relative;\"><a href=\"#django%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"django에서의 단위 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#django%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"django에서의 단위 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django에서의 단위 테스트</h2>\n<p><code class=\"language-text\">startapp</code>을 통해 앱을 생성하게 되면 하위에 <code class=\"language-text\">tests.py</code> 라는 파일이 생긴다.\n해당 파일의 내용은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>test <span class=\"token keyword\">import</span> TestCase\n\n<span class=\"token comment\"># Create your tests here.</span></code></pre></div>\n<p>Django의 <code class=\"language-text\">TestCase</code>는 <code class=\"language-text\">unittest.TestCase</code>의 확장 버전으로 Django에 대한 특화 기능들이 추가되어 있다고 한다.\n간단한 테스트를 만들어 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>test <span class=\"token keyword\">import</span> TestCase\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SmokeTest</span><span class=\"token punctuation\">(</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_bad_maths</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>실패할 수 밖에 없는 테스트이지만 우선 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">python manage.py <span class=\"token builtin class-name\">test</span>\n\nCreating <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.\nSystem check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\nF\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nFAIL: test_bad_maths <span class=\"token punctuation\">(</span>superlists.lists.tests.SmokeTest<span class=\"token punctuation\">)</span>\n----------------------------------------------------------------------\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Users/yugyeong/Study/TDD4CleanCode/superlists/lists/tests.py\"</span>, line <span class=\"token number\">6</span>, <span class=\"token keyword\">in</span> test_bad_maths\n    self.assertEqual<span class=\"token punctuation\">(</span><span class=\"token number\">1</span>+1, <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nAssertionError: <span class=\"token number\">2</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span>\n\n----------------------------------------------------------------------\nRan <span class=\"token number\">1</span> <span class=\"token builtin class-name\">test</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0</span>.001s\n\nFAILED <span class=\"token punctuation\">(</span>failures<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nDestroying <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>제대로 동작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">System check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\nEE\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nERROR: superlists.lists <span class=\"token punctuation\">(</span>unittest.loader._FailedTest<span class=\"token punctuation\">)</span>\n----------------------------------------------------------------------\nImportError: Failed to <span class=\"token function\">import</span> <span class=\"token builtin class-name\">test</span> module: superlists.lists\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/loader.py\"</span>, line <span class=\"token number\">462</span>, <span class=\"token keyword\">in</span> _find_test_path\n    package <span class=\"token operator\">=</span> self._get_module_from_name<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/loader.py\"</span>, line <span class=\"token number\">369</span>, <span class=\"token keyword\">in</span> _get_module_from_name\n    __import__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\nModuleNotFoundError: No module named <span class=\"token string\">'superlists.lists'</span></code></pre></div>\n<p>혹시 참고중인 도서의 내용을 그대로 따라하다가 현 시점에서 위와 같은 에러가 나신 분이 있다면 프로젝트 루트 디렉토리 아래의 <code class=\"language-text\">superlists</code> 폴더의 이름을 임시로 변경해야 한다.\n루트 디렉토리 이름과 동일해서 <code class=\"language-text\">ImportError</code>가 나는 것이다.\n하지만 또 이부분을 수정하니 서버를 켤 때 문제가 있다… 이 부분은 더 고민해봐야할 것 같다.</p>\n<h2 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h2>\n<p>Django의 기본적인 처리 흐름은 다음과 같다.</p>\n<ol>\n<li>특정 URL에 대한 HTTP 요청을 받는다.</li>\n<li>Django는 특정 규칙을 이용해서 해당 요청에 어떤 뷰 함수를 실행할지 결정한다.</li>\n<li>이 뷰 기능이 요청을 처리해서 HTTP 응답으로 반환한다.</li>\n</ol>\n<p>따라서 테스트해야 할 것은 두 가지이다.</p>\n<ul>\n<li>URL의 사이트 루트(<code class=\"language-text\">/</code>)를 해석해서 특정 뷰 기능에 매칭시킬 수 있는가?</li>\n<li>이 뷰 기능이 특정 HTML을 반환하게 해서 기능 테스트를 통과할 수 있는가?</li>\n</ul>\n<h2 id=\"첫-번째-테스트\" style=\"position:relative;\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"첫 번째 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"첫 번째 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 테스트</h2>\n<p>위의 테스트 코드를 다음과 같이 수정하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>test <span class=\"token keyword\">import</span> TestCase\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> resolve\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> home_page\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePageTest</span><span class=\"token punctuation\">(</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_root_url_resolves_to_home_page_view</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        found <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span>found<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span> home_page<span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">resolve</code>는 Django의 내부 함수로 URL을 해석해서 일치하는 뷰 함수를 찾는다.\n여기서는 <code class=\"language-text\">/</code>가 호출될 때 <code class=\"language-text\">resolve</code>를 실행해서 <code class=\"language-text\">home_page</code>라는 함수를 호출한다.</p>\n<p><code class=\"language-text\">home_page</code>는 곧 작성할 뷰 함수로 HTML을 반환한다.</p>\n<p>테스트를 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">System check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\nE\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nERROR: superlists.lists.tests <span class=\"token punctuation\">(</span>unittest.loader._FailedTest<span class=\"token punctuation\">)</span>\n----------------------------------------------------------------------\nImportError: Failed to <span class=\"token function\">import</span> <span class=\"token builtin class-name\">test</span> module: superlists.lists.tests\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/loader.py\"</span>, line <span class=\"token number\">428</span>, <span class=\"token keyword\">in</span> _find_test_path\n    module <span class=\"token operator\">=</span> self._get_module_from_name<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/unittest/loader.py\"</span>, line <span class=\"token number\">369</span>, <span class=\"token keyword\">in</span> _get_module_from_name\n    __import__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"/Users/yugyeong/Study/TDD4CleanCode/superlists/lists/tests.py\"</span>, line <span class=\"token number\">3</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    from .views <span class=\"token function\">import</span> home_page\nImportError: cannot <span class=\"token function\">import</span> name <span class=\"token string\">'home_page'</span></code></pre></div>\n<p>첫 번째 에러로 <code class=\"language-text\">home_page</code>를 import 할 수 없다고 뜬다.\n그렇다면 <code class=\"language-text\">home_page</code> 함수를 작성해주어야 한다.\n우선 <code class=\"language-text\">views.py</code>에 <code class=\"language-text\">home_page</code>를 선언해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n\nhome_page <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></code></pre></div>\n<p>그리고 다시 테스트를 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Creating <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.\nSystem check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\nE\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span><span class=\"token operator\">==</span>\nERROR: test_root_url_resolves_to_home_page_view <span class=\"token punctuation\">(</span>superlists.lists.tests.HomePageTest<span class=\"token punctuation\">)</span>\n----------------------------------------------------------------------\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Users/yugyeong/Study/TDD4CleanCode/superlists/lists/tests.py\"</span>, line <span class=\"token number\">8</span>, <span class=\"token keyword\">in</span> test_root_url_resolves_to_home_page_view\n    found <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"/Users/yugyeong/Study/TDD4CleanCode/venv/lib/python3.6/site-packages/django/urls/base.py\"</span>, line <span class=\"token number\">24</span>, <span class=\"token keyword\">in</span> resolve\n    <span class=\"token builtin class-name\">return</span> get_resolver<span class=\"token punctuation\">(</span>urlconf<span class=\"token punctuation\">)</span>.resolve<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n  File <span class=\"token string\">\"/Users/yugyeong/Study/TDD4CleanCode/venv/lib/python3.6/site-packages/django/urls/resolvers.py\"</span>, line <span class=\"token number\">566</span>, <span class=\"token keyword\">in</span> resolve\n    raise Resolver404<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'tried'</span><span class=\"token builtin class-name\">:</span> tried, <span class=\"token string\">'path'</span><span class=\"token builtin class-name\">:</span> new_path<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndjango.urls.exceptions.Resolver404: <span class=\"token punctuation\">{</span><span class=\"token string\">'tried'</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>URLResolver <span class=\"token operator\">&lt;</span>URLPattern list<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>admin:admin<span class=\"token punctuation\">)</span> <span class=\"token string\">'admin/'</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>, <span class=\"token string\">'path'</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span>\n\n----------------------------------------------------------------------\nRan <span class=\"token number\">1</span> <span class=\"token builtin class-name\">test</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0</span>.005s\n\nFAILED <span class=\"token punctuation\">(</span>errors<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nDestroying <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>에러 내용이 바뀌었다.\n이번에는 URL 관련 에러다.\n우리가 찾으려는 <code class=\"language-text\">/</code>에 해당하는 URL 매핑을 찾을 수 없어서 404 에러가 발생한 걸로 보인다.\n<code class=\"language-text\">urls.py</code> 파일을 열어서 URL 패턴을 추가해주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path<span class=\"token punctuation\">,</span> include\n\n<span class=\"token keyword\">from</span> superlists<span class=\"token punctuation\">.</span>lists<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    path<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> home_page<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>다시 테스트해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">(</span>생략<span class=\"token punctuation\">)</span>\nTypeError: view must be a callable or a list/tuple <span class=\"token keyword\">in</span> the <span class=\"token keyword\">case</span> of include<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>.</code></pre></div>\n<p><code class=\"language-text\">view</code>를 호출할 수 없다는 메시지가 뜨고 있다.\n<code class=\"language-text\">home_page</code>가 아직 함수가 아니기 때문이다.\n이제 실제 함수로 변경해보도록 하자.\n다시 <code class=\"language-text\">views.py</code>로 돌아가 <code class=\"language-text\">home_page</code>를 함수의 형태로 바꾼다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">home_page</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span></code></pre></div>\n<p>다시 테스트해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Creating <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.\nSystem check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\n<span class=\"token builtin class-name\">.</span>\n----------------------------------------------------------------------\nRan <span class=\"token number\">1</span> <span class=\"token builtin class-name\">test</span> <span class=\"token keyword\">in</span> <span class=\"token number\">0</span>.001s\n\nOK\nDestroying <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>드디어 첫 단위 테스트가 성공했다.</p>\n<h2 id=\"두-번째-테스트\" style=\"position:relative;\"><a href=\"#%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"두 번째 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"두 번째 테스트 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>두 번째 테스트</h2>\n<p>뷰를 위한 테스트를 작성할 때는 빈 함수를 작성하는 것이 아니라 HTML 형식의 실제 응답을 반환하는 함수를 작성해야 한다.\n<code class=\"language-text\">test.py</code>를 열어 다음과 같이 새로운 테스트를 추가하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpRequest\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>test <span class=\"token keyword\">import</span> TestCase\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> resolve\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> home_page\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePageTest</span><span class=\"token punctuation\">(</span>TestCase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_root_url_resolves_to_home_page_view</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        found <span class=\"token operator\">=</span> resolve<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertEqual<span class=\"token punctuation\">(</span>found<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">,</span> home_page<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">test_home_page_returns_to_home_page_view</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        request <span class=\"token operator\">=</span> HttpRequest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        response <span class=\"token operator\">=</span> home_page<span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertTrue<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'&lt;html>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertIn<span class=\"token punctuation\">(</span><span class=\"token string\">b'&lt;title>To-Do lists&lt;/title>'</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>assertTrue<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">b'&lt;/html>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">HttpResponse</code> 객체를 생성해서 사용자가 어떤 요청을 브라우저에 보내는지 확인한다.</p>\n<p>이것을 <code class=\"language-text\">home_page</code> 뷰에 전달해서 응답을 취득한다. 이 객체는 <code class=\"language-text\">HttpResponse</code>라는 클래스의 인스턴스다.\n응답 내용이 특정 속성을 가지고 있는지 확인한다.</p>\n<p>그 다음은 응답 내용이 <code class=\"language-text\">&lt;html></code>로 시작하고 <code class=\"language-text\">&lt;/html></code>로 끝나는지 확인한다.\n<code class=\"language-text\">response.content</code>는 byte형 데이터로 파이썬 문자열이 아니다.\n따라서 <code class=\"language-text\">b'</code> 구문을 사용해서 비교한다.</p>\n<p>마지막으로 반환 내용의 <code class=\"language-text\">&lt;title></code> 태그에 <strong>To-Do lists</strong>라는 단어가 있는지 확인한다.</p>\n<p>테스트를 실행해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">(</span>생략<span class=\"token punctuation\">)</span>\nTypeError: home_page<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> takes <span class=\"token number\">0</span> positional arguments but <span class=\"token number\">1</span> was given</code></pre></div>\n<p>여기서부터 TDD 단위 테스트 - 코드 주기에 대해 생각해야 한다.</p>\n<h2 id=\"단위-테스트---코드-주기\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8---%EC%BD%94%EB%93%9C-%EC%A3%BC%EA%B8%B0\" aria-label=\"단위 테스트   코드 주기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8---%EC%BD%94%EB%93%9C-%EC%A3%BC%EA%B8%B0\" aria-label=\"단위 테스트   코드 주기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단위 테스트 - 코드 주기</h2>\n<ol>\n<li>터미널에서 단위 테스트를 실행해서 어떻게 실패하는지 확인한다.</li>\n<li>편집기상에서 현재 실패 테스트를 수정하기 위한 최소한의 코드를 변경한다.</li>\n</ol>\n<p>그리고 이것을 반복한다.</p>\n<p>얼마나 빨리 이 주기를 따라갈 수 있는지 확인해보자.</p>\n<ul>\n<li>최소한의 코드 변경</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">home_page</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span></code></pre></div>\n<ul>\n<li>테스트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">AttributeError: <span class=\"token string\">'NoneType'</span> object has no attribute <span class=\"token string\">'content'</span></code></pre></div>\n<ul>\n<li>코드 : 가정한 대로 <code class=\"language-text\">django.http.httpResponse</code>를 사용한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">home_page</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse</code></pre></div>\n<ul>\n<li>다시 테스트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">AttributeError: <span class=\"token string\">'property'</span> object has no attribute <span class=\"token string\">'startswith'</span></code></pre></div>\n<ul>\n<li>다시 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">home_page</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;html>&lt;title>To-Do lists&lt;/title>'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>테스트</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">AssertionError: False is not <span class=\"token boolean\">true</span></code></pre></div>\n<ul>\n<li>코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">home_page</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> HttpResponse<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;html>&lt;title>To-Do lists&lt;/title>&lt;/html>'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>테스트 성공!</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Creating <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.\nSystem check identified no issues <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> silenced<span class=\"token punctuation\">)</span>.\n<span class=\"token punctuation\">..</span>\n----------------------------------------------------------------------\nRan <span class=\"token number\">2</span> tests <span class=\"token keyword\">in</span> <span class=\"token number\">0</span>.007s\n\nOK\nDestroying <span class=\"token builtin class-name\">test</span> database <span class=\"token keyword\">for</span> <span class=\"token builtin class-name\">alias</span> <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.</code></pre></div>\n<h2 id=\"references\" style=\"position:relative;\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li><a href=\"https://book.naver.com/bookdb/book_detail.nhn?bid=8819504\">파이썬을 이용한 클린코드를 위한 테스트 주도 개발</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/tdd/Django-unit-test/#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%99%80-%EA%B8%B0%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%B0%A8%EC%9D%B4\">단위 테스트와 기능 테스트의 차이</a></p>\n<ul>\n<li><a href=\"/tdd/Django-unit-test/#%EA%B8%B0%EB%8A%A5-%ED%85%8C%EC%8A%A4%ED%8A%B8\">기능 테스트</a></li>\n<li><a href=\"/tdd/Django-unit-test/#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\">단위 테스트</a></li>\n<li><a href=\"/tdd/Django-unit-test/#tdd-%EC%9E%91%EC%97%85-%EC%88%9C%EC%84%9C\">TDD 작업 순서</a></li>\n</ul>\n</li>\n<li><a href=\"/tdd/Django-unit-test/#django%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8\">Django에서의 단위 테스트</a></li>\n<li><a href=\"/tdd/Django-unit-test/#%EB%AA%A9%ED%91%9C\">목표</a></li>\n<li><a href=\"/tdd/Django-unit-test/#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\">첫 번째 테스트</a></li>\n<li><a href=\"/tdd/Django-unit-test/#%EB%91%90-%EB%B2%88%EC%A7%B8-%ED%85%8C%EC%8A%A4%ED%8A%B8\">두 번째 테스트</a></li>\n<li><a href=\"/tdd/Django-unit-test/#%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8---%EC%BD%94%EB%93%9C-%EC%A3%BC%EA%B8%B0\">단위 테스트 - 코드 주기</a></li>\n<li><a href=\"/tdd/Django-unit-test/#references\">References</a></li>\n</ul>","frontmatter":{"title":"🔍 Django에서 단위 테스트 실행하기","date":"August 29, 2019"}}},"pageContext":{"slug":"/tdd/Django-unit-test/","previous":{"fields":{"slug":"/algorithm/Is-sqrt/"},"frontmatter":{"title":"🧠 정수 제곱근 판별","category":"Algorithm","draft":false}},"next":{"fields":{"slug":"/algorithm/Collatz/"},"frontmatter":{"title":"🧠 콜라츠 추측","category":"Algorithm","draft":false}}}},"staticQueryHashes":["3128451518","96099027"]}